{
  "name": "rs-chef",
  "description": "Installs and configures the Chef Client and Server",
  "long_description": "# RightScale Chef Client Cookbook - Bootstrap chef-client to run as RS boots server.\n\n## DESCRIPTION:\n\nThis if fork of original cookbook is available at [https://github.com/rightscale/rightscale_cookbooks](https://github.com/rightscale/rightscale_cookbooks).\n\nThis cookbook provides recipes for setting up and running a Chef Client. RS launches chef-solo which runs this recipe that allows chef-client and server run.\n\n## REQUIREMENTS:\n\n* Requires a VM launched from a RightScale managed RightImage\n\n* Tested on the following RightImages: CentOS 6.4\n\n* Tested Chef Client version 11.10.0-1\n\n## COOKBOOKS DEPENDENCIES:\n\nPlease see `metadata.rb` file for the latest dependencies.\n* `rightscale`\n\n## KNOWN LIMITATIONS:\n\nThere are no known limitations.\n\n## SETUP/USAGE:\n\n* When using a RightScale ServerTemplate, place `rs-chef::install_client`\n  recipe into your runlist to setup the Chef Client. Set server_url,\n  validator_pem and validation_name to match the Chef Server configuration.\n\n* Set inputs reconverge_list to the value `rs-chef::do_client_converge` and\n  interval to minutes.\n\nFor more info see: [Release Notes](http://support.rightscale.com/18-Release_Notes/ServerTemplates_and_RightImages/v13.4#Chef_Client_\\(v13.4\\))\n\n## DETAILS:\n\n### General\n\nThe cookbook installs the Chef Client with needed configuration for CentOS and\nUbuntu.\n\n### Attributes:\n\nThese are the settings used in recipes and templates. Default values are noted.\n* `node[:chef][:client][:version]`-\n  The package version. Default: \"10.24.0-1\"\n* `node[:chef][:client][:config_dir]`-\n  The Chef Client config directory. Default: \"/etc/chef\"\n* `node[:chef][:client][:server_url]`-\n  The url to connect to the remote Chef Server.\n* `node[:chef][:client][:validator_pem]`-\n  Private ssh key to register the Chef Client with the Chef Server.\n* `node[:chef][:client][:validation_name]`-\n  Validation name, along with the private ssh key, is used to determine whether\n  the Chef Client may register with the Chef Server. The validation_name\n  located on the Server and in the Client configuration file must match.\n* `node[:chef][:client][:node_name]`-\n  The node's name to register on the Chef Server.\n* `node[:chef][:client][:roles]`-\n  Comma separated list of roles which will be applied to this instance. Roles\n  should be defined on the Chef Server else recipe will fail.\n* `node[:chef][:client][:environment]`-\n  The Chef Server environment name. By default the Chef Client environment\n  variable is set to \"_default\".\n* `node[:chef][:client][:company]`-\n  Company name to be set in the Client configuration file. This attribute is\n  applicable for Opscode Hosted Chef Server. The company name specified in both\n  the Server and the Client configuration file must match.\n* `node[:chef][:client][:runlist_override]`-\n  A custom JSON string to be added to the first run of chef-client.\n* `node[:chef][:client][:log_level]`-\n  the level of logging that will be stored in the log file. Default: info.\n* `node[:chef][:client][:log_location]`-\n  the location of the log file. Default: /var/log/chef-client.log\n* `node[:chef][:client][:data_bag_secret]`-\n  secret key used to encrypt data bag items.\n\n### Templates:\n\n* `client.rb.erb`-\n  The Chef Client configuration file. Used in `rs-chef::install_client` recipe.\n* `validation_key.erb`-\n  Private SSH key which will be used to authenticate the Chef Client on the\n  remote Chef Server. Used in `rs-chef::install_client` and\n  `rs-chef::do_client_converge` recipes.\n* `runlist.json.erb`-\n  The Chef Client runlist.json file. Defined in setup_runlist definition and\n  used in `rs-chef::install_client` and `rs-chef::do_client_converge` recipes.\n\n### Usage Example:\n\n## Update and execute runlist.\n\n* `rs-chef::do_client_converge`\n  This recipe is used in the operational phase only. It runs runlist from file.\n  To update the roles user can provide new roles as input and run the recipe.\n  Roles to be used should be available on the Chef Server.\n\n## Chef Client Reconvergence\n\n* `sys::do_reconverge_list_enable`\n  This recipe is used in the boot and operational phase. It starts a periodic\n  reconverge.\n\n* `sys::do_reconverge_list_disable`\n  This recipe is used in the operational phase. It stops a periodic reconverge.\n\n## LICENSE:\n\nCopyright RightScale, Inc. All rights reserved.\nAll access and use subject to the RightScale Terms of Service available at\nhttp://www.rightscale.com/terms.php and, if applicable, other agreements\nsuch as a RightScale Master Subscription Agreement.\n",
  "maintainer": "RightScale, Inc.",
  "maintainer_email": "support@rightscale.com",
  "license": "Copyright RightScale, Inc. All rights reserved.",
  "platforms": {
    "centos": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "collectd": "~> 1.1.0",
    "machine_tag": "~> 1.0.6",
    "postgresql": "~> 3.4.1",
    "database": "~> 1.3.8"
  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {
    "chef/client/version": {
      "display_name": "Chef Client Version",
      "description": "Specify the Chef Client version to match requirements of your Chef Server. Example: 11.12.8-2",
      "required": "optional",
      "default": "11.12.8-2",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/server/version": {
      "display_name": "Chef Server Version",
      "description": "Specify the Chef Server version to match requirements of your Chef Server. Example: 11.1.3-1",
      "required": "optional",
      "default": "11.1.3-1",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/server_url": {
      "display_name": "Chef Server URL",
      "description": "Enter the URL to connect to the remote Chef Server. To connect to the Opscode Hosted Chef use the following syntax https://api.opscode.com/organizations/ORGNAME. Example: http://example.com:4000/chef",
      "required": "required",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/validator_pem": {
      "display_name": "Private Key to Register the Chef Client with the Chef Server",
      "description": "Private SSH key which will be used to authenticate the Chef Client on the remote Chef Server.",
      "required": "required",
      "recipes": [
        "rs-chef::client",
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/ca_file": {
      "display_name": "HTTPS CA File",
      "description": "CA File to be used to verify https connection to a chef server.",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/validation_name": {
      "display_name": "Chef Client Validation Name",
      "description": "Validation name, along with the private SSH key, is used to determine whether the Chef Client may register with the Chef Server. The validation_name located on the Server and in the Client configuration file must match. Example: ORG-validator",
      "required": "required",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/node_name": {
      "display_name": "Chef Client Node Name",
      "description": "Name which will be used to authenticate the Chef Client on the remote Chef Server. If nothing is specified, the instance FQDN will be used. Example: chef-client-host1",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/environment": {
      "display_name": "Chef Client Environment",
      "description": "Specify the environment type for the Chef Client configuration file. Example: development",
      "required": "optional",
      "default": "_default",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/company": {
      "display_name": "Chef Company Name",
      "description": "Company name to be set in the Client configuration file. This attribute is applicable for Opscode Hosted Chef Server. The company name specified in both the Server and the Client configuration file must match. Example: MyCompany",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/roles": {
      "display_name": "Set of Client Roles",
      "description": "Comma-separated list of roles which will be applied to this instance. The Chef Client will execute the roles in the order specified here. Example: webserver, monitoring",
      "required": "optional",
      "recipes": [
        "rs-chef::client",
        "rs-chef::do_client_converge"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/runlist_override": {
      "display_name": "JSON String used to override the first run of chef-client.",
      "description": "A custom JSON string to override the first run of chef-client. Example: recipe[ntp::default]",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/log_level": {
      "display_name": "Logging Level",
      "description": "The level of logging that will be stored in the log file. Example: debug",
      "required": "optional",
      "default": "info",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/log_location": {
      "display_name": "Log File Location",
      "description": "The location of the log file. Example: /var/log/chef-client.log",
      "required": "optional",
      "default": "/var/log/chef-client.log",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/strace": {
      "display_name": "Do a strace for chef-client run",
      "description": "If true, chef-client will run under strace to trace all system calls.",
      "required": "optional",
      "default": "false",
      "choice": [
        "false",
        "true"
      ],
      "recipes": [
        "rs-chef::client"
      ],
      "calculated": false,
      "type": "string"
    },
    "chef/client/data_bag_secret": {
      "display_name": "Data Bag Secret Key",
      "description": "A secret key used to encrypt data bag items. Example: cred:CHEF_DATA_BAG_SECRET",
      "required": "optional",
      "default": "",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/deployment": {
      "display_name": "Coupa Deployment",
      "description": "Specify the deployment name",
      "required": "required",
      "recipes": [
        "rs-chef::client",
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/serverdomain": {
      "display_name": "Coupa serverdomain",
      "description": "Specify the serverdomain coupadev.com/coupahost.com",
      "required": "required",
      "choice": [
        "coupadev.com",
        "coupahost.com"
      ],
      "recipes": [
        "rs-chef::client",
        "rs-chef::server",
        "rs-chef::security-updates"
      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/nodename": {
      "display_name": "Node name for the server",
      "description": "Specify the nickname",
      "required": "optional",
      "default": "",
      "recipes": [
        "rs-chef::client",
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/vol/stripe_count": {
      "display_name": "How many stripes of EBS",
      "description": "Number of stripes for volume, dafault is 0 meaning do not attach any volume",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/vol/iops": {
      "display_name": "Total IOPS",
      "description": "IOPS for all the volume stripes, default is none",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/vol/size": {
      "display_name": "Total size for all stripes",
      "description": "Total size in GB, sum of all volume stripes, default is 50GB",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/vol/type": {
      "display_name": "Volume Type",
      "description": "Volume type. Could be: (provisioned_ssd) io1 - Provisioned IOPS (SSD); (general_ssd) gp2 - General Purpose (SSD); (magnetic) standard - Magnetic",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [
        "magnetic",
        "provisioned_ssd",
        "general_ssd"
      ],
      "default": "magnetic",
      "calculated": false,
      "type": "string"
    },
    "coupa/vol/encrypted": {
      "display_name": "Encryption for Volume",
      "description": "Use encryption for a volume or not",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "choice": [
        "true",
        "false"
      ],
      "default": "true",
      "calculated": false,
      "type": "string"
    },
    "coupa/stack_release": {
      "display_name": "Coupa Stack Release Version",
      "description": "Coupa Stack Release Version, example es4.4",
      "required": "optional",
      "recipes": [
        "rs-chef::client"
      ],
      "default": "es4.4",
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/s3/access_key": {
      "display_name": "AWS ACCESS KEY for S3",
      "description": "The aws access key to be used to work with S3 buckets",
      "required": "required",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/s3/secret_key": {
      "display_name": "AWS SECRET KEY for S3",
      "description": "The aws access secret key to be used to work with S3 buckets",
      "required": "required",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/server/db_master_user": {
      "display_name": "Chef Server DB Master User",
      "description": "The username to be used to connect to chef server database with the root accees",
      "required": "required",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/server/db_master_user_password": {
      "display_name": "Chef Server DB Master Password",
      "description": "The password to be used to connect to chef server database with the root accees",
      "required": "required",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/server/db_endpoint": {
      "display_name": "Chef Server DB Endpoint",
      "description": "The endpoint of chef server database. Format: Host:Port.",
      "required": "required",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/server/ssl_ca_cert": {
      "display_name": "SSL CA Cert",
      "description": "The ssl CA certificate to be used on nginx endpoint.",
      "required": "optional",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/server/ssl_cert": {
      "display_name": "SSL Cert",
      "description": "The ssl certificate to be used on nginx endpoint.",
      "required": "optional",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "chef/server/ssl_cert_key": {
      "display_name": "SSL Cert Key",
      "description": "The ssl certificate key to be used on nginx endpoint.",
      "required": "optional",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/rs_sketchy": {
      "display_name": "RS Sketchy",
      "description": "The sketchy server in RS infrastructure. Since the RS_SKETCHY variable in /var/spool/cloud/user-data.rb is deprecated, we should use RS input to set it up. Required for monitoring.",
      "required": "required",
      "recipes": [
        "rs-chef::server",
        "rs-chef::client"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/run_recipe": {
      "display_name": "Recipe Name",
      "description": "The name of a custom recipe needs to be run.",
      "required": "required",
      "recipes": [
        "rs-chef::run_recipe"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "coupa/run_recipe_json": {
      "display_name": "Recipe Attributes",
      "description": "The json string needs to be passed to chef-client on run custom recipe.",
      "required": "optional",
      "recipes": [
        "rs-chef::run_recipe"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "postgresql/password/opscode_chef": {
      "display_name": "Postgres opscode_chef password",
      "description": "Postgres password for opscode_chef login",
      "required": "required",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "postgresql/password/opscode_chef_ro": {
      "display_name": "Postgres opscode_chef_ro password",
      "description": "Postgres password for opscode_chef_ro login",
      "required": "required",
      "recipes": [
        "rs-chef::server"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    }
  },
  "groupings": {

  },
  "recipes": {
    "rs-chef::client": "Propagate coupa attributes",
    "rs-chef::do_client_converge": "Allows manual update/re-run of runlist on the Chef Client.",
    "rs-chef::do_unregister_request": "Deletes the node and registered client on the Chef Server.",
    "rs-chef::server": "Installs and configures chef server",
    "rs-chef::server_monitoring": "Set up RS monitoring",
    "rs-chef::server_postgresql": "Set up postgresql service",
    "rs-chef::run_recipe": "Run custom recipe",
    "rs-chef::decomm": "Run decommission role",
    "rs-chef::security-updates": "Apply security updates. Install patches packages."
  },
  "version": "15.0.6",
  "source_url": "",
  "issues_url": ""
}
